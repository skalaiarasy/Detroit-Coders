@model IEnumerable<ProgramEventViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var vems = new List<ProgramEventVolunteerMapper>();
    if (User.Identity.IsAuthenticated)
    {
        if (!User.IsInRole("ApplicationAdmin"))
        {
            vems = (List<ProgramEventVolunteerMapper>)ViewBag.VEM;
        }
    }
}
<div class="border backgroundwhite">
    @*adding border,background and image*@
    <div class="row">
        @* the "row" class is used mainly to hold columns in it.*@
        <div class="col-6">
            @*element take half of the horizontal screen space devices.*@


        </div>
        <div class="col-6 text-right">
            @* move the columns to the right*@

            @if (User.IsInRole("ApplicationAdmin"))
            {
                <a><partial name="_CreateButtonPartial" /></a>
            }
            else if (!User.Identity.IsAuthenticated)
            {
                <h3 class="text-right text-info">To Register to an Event, Please <a href="/Identity/Account/Register">Sign Up!</a></h3>
            }
        </div>
    </div>
    <a><partial name="_EventUserView" /></a>

    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        @Html.DisplayNameFor(model => model.Event.ImageUrl)
                    </th>
                    <th>
                        Events
                        @*@Html.DisplayNameFor(model => model.Event.Name)-
                            @Html.DisplayNameFor(model => model.Event.Description)*@
                    </th>
                    <!--<th>-->
                    @*@Html.DisplayNameFor(model => model.Event.Description)*@
                    <!--</th>-->
                    <th>
                        @Html.DisplayNameFor(model => model.Event.StartingDate)-
                        @Html.DisplayNameFor(model => model.Event.EndingDate)
                    </th>
                    <!--<div class="form-group row">
                    <div class="col-2">-->
                    @*to add label*@
                    <!--<label asp-for="MenuItem.Image" class="col-form-label"></label>
                        </div>
                        <div class="col-5">
                            <input type="file" name="files" multiple class="form-control" />
                        </div>
                    </div>-->
                    <th>
                        @Html.DisplayNameFor(model => model.ProgramName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.Venue)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.Duration)
                    </th>
                    @if (User.IsInRole("ApplicationAdmin"))
                    {
                        <th>Action</th>
                    }
                    else if (User.Identity.IsAuthenticated)
                    {

                        <th>Action</th>
                    }


                </tr>


                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src=@Html.DisplayFor(modelItem => item.Event.ImageUrl) width="75px" height="75px" />
                        </td>
                        <td>
                            <b>
                                @Html.DisplayFor(modelItem => item.Event.Name)
                            </b>
                            -<br />
                            @Html.DisplayFor(modelItem => item.Event.Description)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.Event.Description)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.StartingDate)-
                            @Html.DisplayFor(modelItem => item.Event.EndingDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProgramName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Venue)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Duration)
                        </td>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (User.IsInRole("ApplicationAdmin"))
                            {
                                <partial name="_TableButtonPartial" model="item.Event.Id" />
                            }
                            else
                            {
                                if (vems.Any(x => x.EventId == item.Event.Id))
                                {
                                    <td>
                                        <button class="btn btn-danger" id="Register" onclick="RegisterVolunteer(@item.Event.Id, @item.ProgramId,0)">UnRegister</button>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <button class="btn btn-primary px-md-4" id="Register" onclick="RegisterVolunteer(@item.Event.Id, @item.ProgramId,1)">Register</button>
                                    </td>
                                }
                            }
                        }
                    </tr>
                }
            </table>
        </div>
    </div>
</div>






@section Scripts {

    <script type="text/javascript">
        //please refer http://bootboxjs.com/examples.html
        function alertResponse(response,indexUrl) {
            bootbox.dialog({
                title: 'Event Confirmation',
                message: response,
                size: 'large',
                buttons: {
                    ok: {
                        label: "OK",
                        className: 'btn-info',
                        callback: function () {
                            console.log('Custom OK clicked');
                            window.location.href = indexUrl;
                        }
                    }
                }
            });
        }

        function RegisterVolunteer(evntId, progId,flag) {
            var registerUrl = '@Url.Action("Register","Events")';
            var indexUrl = '@Url.Action("Index","Events")';
            var registerUrl = registerUrl + "?eventId=" + evntId + "&progId=" + progId + "&flag=" + flag;

            $.ajax({
                url: registerUrl,
                method: 'GET',
                success: function (response) {
                    alertResponse(response, indexUrl);//for bootbox to activate,added alert Respose method.(line150)
                },
                error: function (errorResponse) {
                    console.log(errorResponse);
                }
            });
        }

        


    </script>
}
