@model IEnumerable<ProgramEventViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ 
    var vems = new List<ProgramEventVolunteerMapper>();
    if (User.Identity.IsAuthenticated)
    {
        if (!User.IsInRole("ApplicationAdmin"))
        {
            vems = (List<ProgramEventVolunteerMapper>)ViewBag.VEM;
        }
    }
}


<style>
    body {
        background-color: azure;
    }
</style>
<div class="border backgroundwhite">
    @*adding border,background and image*@
    <div class="row">
        @* the "row" class is used mainly to hold columns in it.*@
        <div class="col-6">
            @*element take half of the horizontal screen space devices.*@
            <h2 class="text-info">Events List</h2>@*Add meaning through text-colors*@
        </div>
        <div class="col-6 text-right">
            @* move the columns to the right*@

            @if (User.IsInRole("ApplicationAdmin"))
            {
                <a><partial name="_CreateButtonPartial" /></a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <table class="table table-striped border" width="90%">
                <tr class="table-secondary">
                    <th>
                        @Html.DisplayNameFor(model => model.Event.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.StartingDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.EndingDate)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.Event.EnrollmentDate)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.ProgramName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Event.Venue)
                    </th>
                    <th colspan="2">
                        @Html.DisplayNameFor(model => model.Event.Duration)
                    </th>
                </tr>


                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.StartingDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.EndingDate)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Event.EnrollmentDate)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.ProgramName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Venue)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.Duration)
                        </td>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (User.IsInRole("ApplicationAdmin"))
                            {
                                <partial name="_TableButtonPartial" model="item.Event.Id" />
                            }
                            else
                            {
                                if (vems.Any(x => x.EventId == item.Event.Id))
                                {
                                    <td>
                                        <button class="btn btn-danger" id="Register" onclick="RegisterVolunteer(@item.Event.Id, @item.ProgramId,0)">UnRegister</button>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <button class="btn btn-primary" id="Register" onclick="RegisterVolunteer(@item.Event.Id, @item.ProgramId,1)">Register</button>
                                    </td>
                                }
                            }
                        }
                    </tr>
                }
            </table>
            </div>
        </div>
    </div>






    @section Scripts {

        <script type="text/javascript">


        function RegisterVolunteer(evntId, progId,flag) {
            var registerUrl = '@Url.Action("Register","Events")';
            var indexUrl = '@Url.Action("Index","Events")';
            var registerUrl = registerUrl + "?eventId=" + evntId + "&progId=" + progId + "&flag=" + flag;

            $.ajax({
                url: registerUrl,
                method: 'GET',
                success: function (response) {
                    alert(response);
                    window.location.href = indexUrl;
                },
                error: function (errorResponse) {
                    console.log(errorResponse);
                }
            });
        }



        </script>
    }
